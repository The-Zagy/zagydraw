name: Vercel Production Deployment
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
    push:
        branches:
            - main
permissions:
    deployments: write

jobs:
    Deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: pnpm/action-setup@v2
              with:
                  version: 8
            - name: install node
              uses: actions/setup-node@v3
              with:
                  node-version: "18.*"
                  cache: "pnpm"
            - name: Install dependencies
              run: pnpm install
            - name: check types
              run: pnpm run typecheck
            - name: linter
              run: pnpm run lint
            - name: run tests
              run: pnpm test
            - name: Install Vercel CLI
              run: npm install --global vercel@latest
            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
            - name: Build Project Artifacts
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

            - uses: chrnorm/deployment-action@v2
              name: Create GH Deployment
              id: deployment
              with:
                  token: "${{ github.token }}"
                  environment-url: "https://draw.zagy.tech"
                  environment: production
                  log-url: "https://draw.zagy.tech"

            - name: Update deployment status (success)
              if: success()
              uses: chrnorm/deployment-status@v2
              with:
                  token: "${{ github.token }}"
                  environment-url: "https://draw.zagy.tech"
                  log-url: "https://draw.zagy.tech"
                  deployment-id: ${{ steps.deployment.outputs.deployment_id }}
                  state: "success"

            - name: Update deployment status (failure)
              if: failure()
              uses: chrnorm/deployment-status@v2
              with:
                  token: "${{ github.token }}"
                  environment-url: "https://draw.zagy.tech"
                  log-url: "https://draw.zagy.tech"
                  deployment-id: ${{ steps.deployment.outputs.deployment_id }}
                  state: "failure"
